if (light.difLight)
				{
					double cosAlpha;
					Vector3D point = Vector3D::point( (x - dx) / (d*(-zVal)), (y - dy) / (d*(-zVal)), 1/zVal);

					if (light.infinity)
					{
						cosAlpha = wTemp.x * light.ldVector.x + wTemp.y * light.ldVector.y + wTemp.z * light.ldVector.z;
					}
					else{
						Vector3D l = Vector3D::vector(light.ldVector - point);
						l.normalise();

						cosAlpha = Vector3D::dot(l, wTemp) * -1;
					}


					if (cosAlpha > 0)
					{
						color[0] += light.diffuseLight.red * diffuseReflection[0] * cos;
						color[1] += light.diffuseLight.green * diffuseReflection[1] * cos;
						color[2] += light.diffuseLight.blue * diffuseReflection[2] * cos;
					}

				}